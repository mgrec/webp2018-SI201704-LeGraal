/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow-x:hidden}a{text-decoration:none}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@font-face{font-family:Montserrat Light;src:url(../../assets/font/montserrat-light/montserrat-light.eot);src:url(../../assets/font/montserrat-light/montserrat-light.eot?#iefix) format("embedded-opentype"),url(../../assets/font/montserrat-light/montserrat-light.ttf) format("truetype"),url(../../assets/font/montserrat-light/montserrat-light.svg#font-name) format("svg");font-weight:400;font-style:normal}@font-face{font-family:Montserrat Regular;src:url(../../assets/font/montserrat-regular/montserrat-regular.eot);src:url(../../assets/font/montserrat-regular/montserrat-regular.eot?#iefix) format("embedded-opentype"),url(../../assets/font/montserrat-regular/montserrat-regular.ttf) format("truetype"),url(../../assets/font/montserrat-regular/montserrat-regular.svg#font-name) format("svg");font-weight:400;font-style:normal}@font-face{font-family:Avenir Next Bold;src:url(../../assets/font/avenir-next-bold/avenir-next-bold.eot);src:url(../../assets/font/avenir-next-bold/avenir-next-bold.eot?#iefix) format("embedded-opentype"),url(../../assets/font/avenir-next-bold/avenir-next-bold.ttf) format("truetype"),url(../../assets/font/avenir-next-bold/avenir-next-bold.svg#font-name) format("svg");font-weight:400;font-style:normal}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.sticky__navigation{position:fixed;top:50%;right:10px;display:none;-ms-flex-direction:column;flex-direction:column;text-align:right}.sticky__navigation a{position:relative;color:transparent}.sticky__navigation a:before{content:"";display:block;position:absolute;bottom:-10px;right:0;height:2px;width:20px;border-top:1px solid #000}.sticky__navigation a.active{margin-top:15px;color:#0a33e0}.sticky__navigation a.active:before{width:60px}.header{width:100vw;height:60px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;position:fixed;z-index:50;background-color:#fff}.header .logo{display:inline-block;vertical-align:top;text-align:left}.header .logo img{width:60px}.header nav{vertical-align:top}.header nav,.header nav ul,.header nav ul li{display:inline-block}.header nav ul li{margin-right:50px}.header nav ul li:first-of-type{margin-left:50px}.header nav ul li:last-of-type{margin-right:0}.header nav ul li a{color:#000;text-decoration:none;font-family:Montserrat Light}.header nav ul li a.customers__space{position:relative}.header nav ul li a.customers__space:after{content:"";display:block;position:absolute;bottom:-10px;right:0;height:2px;width:100%;border-top:1px solid #000}.nav ul{list-style:none}.main{padding:20px}.main section{width:100%;height:100%;padding-top:60px;position:relative}.main section .wrapper{padding:0 140px}.main section#home{background:url(../img/desktop/bg.jpg) no-repeat 50%;background-size:cover;height:calc(100vh - 20px)}.main section#home .home__block{position:absolute;top:50%;left:0;right:0;margin:0 auto;transform:translateY(-50%);text-align:center}.main section#home .home__block .title img{width:195px;height:150px}.main section#whoarewe{padding-top:135px}.main section#whoarewe .title{text-align:left;font-family:Avenir Next Bold;font-size:46px;color:#0a33e0}.main section#whoarewe .whoarewe__content{position:relative;z-index:2;padding-top:60px}.main section#whoarewe .whoarewe__content .visual{width:560px;height:560px;background:url(../img/desktop/img-strat-1.png) no-repeat 50%;background-size:cover}.main section#whoarewe .whoarewe__content .block-right{background-color:#1e1e1e;padding:95px 100px 85px 60px;text-align:right;width:70%;position:absolute;top:180px;right:0}.main section#whoarewe .whoarewe__content .block-right .lines{width:260px;height:220px;background:url(../img/desktop/lines-blue.svg) no-repeat 50%;display:inline-block;position:absolute;left:60px;top:55px;z-index:0}.main section#whoarewe .whoarewe__content .block-right .description{font-size:23px;color:#fff;font-family:Montserrat Regular;position:relative;z-index:1}.main section#whoarewe .whoarewe__content .block-title{padding-top:135px;position:relative}.main section#whoarewe .whoarewe__content .block-title .title{font-family:Montserrat Regular;color:#000;font-size:36px;padding-bottom:15px}.main section#whoarewe .whoarewe__content .block-title .subtitle{font-family:Montserrat Regular;color:#0a33e0;font-size:23px;line-height:35px}.main section#whoarewe .whoarewe__content .block-title .lines{width:40%;height:220px;background:url(../img/desktop/lines-grey.png) no-repeat 50%;background-size:cover;display:inline-block;position:absolute;right:0;bottom:-40px;z-index:-1}.main section#whoarewe .whoarewe__content .block-title.right .subtitle,.main section#whoarewe .whoarewe__content .block-title.right .title{text-align:right}.main section#whoarewe .whoarewe__content .block-title.right .lines{left:0}.main section#whoarewe .whoarewe__content .valors{display:block;text-align:center;margin-top:100px}.main section#whoarewe .whoarewe__content .valors .valor{display:inline-block}.main section#whoarewe .whoarewe__content .valors .valor:first-of-type{margin-right:10%}.main section#whoarewe .whoarewe__content .valors .valor .valor-title{font-size:24px;font-family:Montserrat Regular;padding-bottom:15px;color:#0a33e0}.main section#whoarewe .whoarewe__content .valors .valor .valor-description{font-size:18px;font-family:Montserrat Light;line-height:27px}.main section#keynumber{padding-top:135px}.main section#keynumber .title{text-align:right;font-family:Avenir Next Bold;font-size:46px;color:#0a33e0}.main section#keynumber .subtitle{text-align:right;font-family:Montserrat Regular;font-size:23px;color:#000}.main section#keynumber .block-numbers{background-color:#000;width:100%;height:225px;margin:145px auto;position:relative}.main section#keynumber .block-numbers .numbers{text-align:center;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;padding-top:60px;position:relative;z-index:1}.main section#keynumber .block-numbers .numbers .number{text-align:center}.main section#keynumber .block-numbers .numbers .number .number-title{display:block;line-height:60px;font-family:Avenir Next Bold;font-size:48px;color:#fff}.main section#keynumber .block-numbers .numbers .number .number-subtitle{display:block;font-family:Avenir Next Bold;font-size:24px;color:#fff}.main section#keynumber .block-numbers .numbers .number .number-description{display:block;font-family:Avenir Next Bold;font-size:18px;color:#fff}.main section#keynumber .lines{width:40%;height:220px;background:url(../img/desktop/lines-blue.svg) no-repeat 50%;display:inline-block;position:absolute;left:20px;top:440px;z-index:0}.main section#keynumber .block-description{padding-top:200px;position:relative}.main section#keynumber .block-description .block-left{padding-top:155px;width:50%;display:inline-block;vertical-align:top;position:relative}.main section#keynumber .block-description .block-left .description{display:block;font-family:Montserrat Regular;font-size:24px;color:#0a33e0}.main section#keynumber .block-description .img-right{vertical-align:top;display:inline-block;width:40%;height:440px;background-color:grey;float:right}.main section#keynumber .lines-grey{width:70%;height:170px;background:url(../img/desktop/lines-grey.png) no-repeat 50%;background-size:cover;display:inline-block;position:absolute;z-index:-1;top:200px;left:180px}.main section#expertise .title{text-align:left;font-family:Avenir Next Bold;font-size:46px;color:#0a33e0}.main section#expertise .subtitle{text-align:left;font-family:Montserrat Regular;font-size:23px;color:#000;margin-bottom:145px}.main section#expertise .expertise__block{position:relative;width:100%;height:300px;overflow:hidden}.main section#expertise .block{width:100%;float:left;height:300px;background-size:50%;background-position:100%;display:inline-block;background-repeat:no-repeat}.main section#expertise .block h2,.main section#expertise .block p.description{text-align:right;margin:20px;opacity:0}.main section#expertise .block.block--left{transform:translate(-50%);background-position:100%}.main section#expertise .block.block--left.open{transform:translate(0)}.main section#expertise .block.block--left.open h2{opacity:1}.main section#expertise .block.block--left.open p.description{opacity:1;max-width:400px;position:absolute;display:block;right:0}.main section#expertise .block.block--left.close{transform:translate(-100%)}.main section#expertise .block.block--right{transform:translate(50%,-100%);background-position:0}.main section#expertise .block.block--right.open{transform:translateY(-100%)}.main section#expertise .block.block--right.open h2,.main section#expertise .block.block--right.open p.description{opacity:1}.main section#expertise .block.block--right.close{transform:translate(100%,-100%)}.main section#expertise .expertise__block--black{height:100px;width:80%;background:#000;position:absolute;bottom:-100px;margin:0 10%;background-color:#000}.main section#works{margin-top:145px}.main section#works .title{text-align:right;font-family:Avenir Next Bold;font-size:46px;color:#0a33e0}.main section#works .subtitle{text-align:right;font-family:Montserrat Regular;font-size:23px;color:#000}.main section#partners{margin-top:145px}.main section#partners .title{text-align:left;font-family:Avenir Next Bold;font-size:46px;color:#0a33e0}.main section#partners .subtitle{text-align:left;font-family:Montserrat Regular;font-size:23px;color:#000}@media only screen and (max-width:894px){.sticky__navigation{display:none!important}.st-burger-icon-container{z-index:99999999999;position:absolute;display:inline-block;margin:15px;font-size:0;vertical-align:middle}.st-burger-icon-container.transformed{left:160px}.st-burger-icon-container .st-burger-icon--large{display:inline-block;cursor:pointer;width:30px;height:30px}.st-burger-icon-container .st-burger-icon--large span{display:block;width:100%;background:#fff;transition:all .5s;-webkit-backface-visibility:hidden;backface-visibility:hidden;position:relative;height:2px;margin:21px 0 0}.st-burger-icon-container .st-burger-icon--large span:before{top:-10px}.st-burger-icon-container .st-burger-icon--large span:after,.st-burger-icon-container .st-burger-icon--large span:before{display:block;width:100%;background:#fff;transition:all .5s;-webkit-backface-visibility:hidden;backface-visibility:hidden;height:2px;position:absolute;content:""}.st-burger-icon-container .st-burger-icon--large span:after{top:10px}.st-burger-icon-container .st-burger-icon--transformed span{background:transparent}.st-burger-icon-container .st-burger-icon--transformed span:after{background:#000;transform:translateY(-10px) rotate(45deg)}.st-burger-icon-container .st-burger-icon--transformed span:before{background:#000;transform:translateY(10px) rotate(-45deg)}.header{height:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:start;justify-content:flex-start;position:absolute;left:-100%;transition:left .3s ease}.header.mobile{left:-30%}.header nav ul{display:-ms-flexbox;display:flex;height:100%;padding:20px;-ms-flex-pack:center;justify-content:center;position:absolute;-ms-flex-direction:column;flex-direction:column;left:30%}.header nav ul li{margin-left:0!important;margin:30px 20px}.header .logo{display:none}.main,.main section .wrapper{padding:0}.main section .subtitle,.main section .title{padding:0 20px}.main section#home{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;height:100vh}.main section#home img{position:absolute;top:160px}.main section#whoarewe{padding-top:80px!important}.main section#whoarewe .visual{width:100%!important;height:300px!important;background-position:50%}.main section#whoarewe .block-right{padding:25px!important;width:80%!important;margin:0 10%!important;position:absolute;top:300px!important;right:0}.main section#whoarewe .block-right .lines{display:none!important}.main section#whoarewe .block-right .description{font-size:18px!important}.main section#whoarewe .whoarewe__content .block-title{padding-top:240px!important}.main section#whoarewe .whoarewe__content .block-title .title{font-size:22px}.main section#whoarewe .whoarewe__content .block-title .subtitle{font-size:18px}.main section#whoarewe .whoarewe__content .block-title.right{padding-top:100px!important}.main section#whoarewe .whoarewe__content .valors{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}.main section#whoarewe .whoarewe__content .valors:last-child{margin:0}.main section#whoarewe .whoarewe__content .valors .valor,.main section#whoarewe .whoarewe__content .valors ul li{margin:30px 0!important}.main section#keynumber{padding-top:80px!important}.main section#keynumber .block-numbers{height:auto;margin:70px auto}.main section#keynumber .block-numbers ul{padding:50px 0!important;display:block!important}.main section#keynumber .block-numbers ul li{display:block;margin:20px 0}.main section#keynumber .block-numbers ul li .number-title{font-size:25px!important}.main section#keynumber .block-numbers ul li .number-description{max-width:130px;font-size:18px;margin:0 auto}.main section#keynumber .lines{width:30%;height:300px;left:35%}.main section#expertise .subtitle{margin-bottom:50px}.main section#expertise .expertise__block{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;height:auto!important}.main section#expertise .block__content{margin-top:30px}.main section#expertise .block__content h3{font-family:Montserrat Regular;font-size:18px;text-align:center}.main section#expertise .block__content p{text-align:center;padding:0 50px}.main section#expertise .block{padding:15px 0;text-align:center;transform:none!important;height:auto!important;background-image:none!important;float:none}.main section#expertise .block .click{text-transform:uppercase;font-family:Montserrat Regular}.main section#expertise .expertise__block--black{display:none}}@media only screen and (min-width:895px){.main section#expertise .slick-block__content,.main section#home img,.st-burger-icon-container{display:none}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
